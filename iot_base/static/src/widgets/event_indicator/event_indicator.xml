<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">
    <t t-name="iot_base.EventIndicator">
    <Card
      title="props.title"
      width="props.width"
      className="'event-indicator ' + props.className"
      bodyClass="'text-center'"
    >
      <!-- Hexagon Icon -->
      <div class="hexagon-container mb-3">
        <svg width="120" height="120" viewBox="0 0 120 120" class="hexagon-icon">
          <!-- Glow effect when ON -->
          <defs t-if="state.isOn">
            <filter id="glow">
              <feGaussianBlur stdDeviation="4" result="coloredBlur" />
              <feMerge>
                <feMergeNode in="coloredBlur" />
                <feMergeNode in="SourceGraphic" />
              </feMerge>
            </filter>
          </defs>

          <!-- Outer glow rays -->
          <g t-if="state.isOn" class="rays">
            <line
              x1="60"
              y1="10"
              x2="60"
              y2="0"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="85"
              y1="17"
              x2="92"
              y2="10"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="103"
              y1="35"
              x2="110"
              y2="28"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="110"
              y1="60"
              x2="120"
              y2="60"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="103"
              y1="85"
              x2="110"
              y2="92"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="85"
              y1="103"
              x2="92"
              y2="110"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="60"
              y1="110"
              x2="60"
              y2="120"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="35"
              y1="103"
              x2="28"
              y2="110"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="17"
              y1="85"
              x2="10"
              y2="92"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="10"
              y1="60"
              x2="0"
              y2="60"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="17"
              y1="35"
              x2="10"
              y2="28"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
            <line
              x1="35"
              y1="17"
              x2="28"
              y2="10"
              stroke="#FFD700"
              stroke-width="2"
              opacity="0.6"
            />
          </g>

          <!-- Hexagon shape -->
          <polygon
            points="60,25 85,37.5 85,62.5 60,75 35,62.5 35,37.5"
            t-att-fill="iconColor"
            stroke="#333"
            stroke-width="2"
            t-att-filter="state.isOn ? 'url(#glow)' : ''"
            class="hexagon-shape"
          />
        </svg>
      </div>

      <!-- Event Label -->
      <h4 class="event-label mb-3">Event</h4>

      <!-- Status Badge -->
      <div class="mb-3">
        <span t-att-class="'badge ' + statusBadgeClass + ' px-3 py-2'">
          <i t-att-class="state.isOn ? 'fa fa-bolt' : 'fa fa-circle'" />
          <t t-esc="' ' + statusText" />
        </span>
      </div>

      <!-- Topic Input -->
      <div class="form-group mb-2">
        <label class="form-label small text-muted">MQTT Topic</label>
        <input
          type="text"
          t-att-value="state.topic"
          placeholder="device/events"
          class="form-control form-control-sm"
          t-on-input="onTopicChange"
          t-att-disabled="state.isSubscribing"
        />
      </div>

      <!-- Action Buttons -->
      <div class="d-flex gap-2 justify-content-center mb-2">
        <button
          t-if="!isSubscribed"
          class="btn btn-sm btn-primary"
          t-on-click="onSubscribe"
          t-att-disabled="state.isSubscribing or !state.topic"
        >
          <i class="fa fa-play me-1" />
          <t t-if="state.isSubscribing">Subscribing...</t>
          <t t-else="">Subscribe</t>
        </button>
        <button
          t-if="isSubscribed"
          class="btn btn-sm btn-danger"
          t-on-click="onUnsubscribe"
        >
                    <i class="fa fa-stop me-1" />
                    Unsubscribe
                </button>
      </div>

      <!-- Subscription Info -->
      <div t-if="isSubscribed" class="alert alert-info alert-sm py-1 px-2 small mb-2">
                <i class="fa fa-info-circle me-1" />
                Topic: <strong t-esc="state.subscribedTopic" />
            </div>

      <!-- Error Message -->
      <div t-if="state.error" class="alert alert-danger alert-sm py-1 px-2 small mb-2">
        <i class="fa fa-exclamation-triangle me-1" />
        <span t-esc="state.error" />
      </div>

      <!-- Last Message Info -->
      <div t-if="state.lastMessage" class="text-muted small">
        <div>
          <strong>Variable:</strong>
          <t t-esc="state.lastMessage.variable" />
        </div>
        <div>
          <strong>Value:</strong>
          <t t-esc="state.lastMessage.value" />
        </div>
        <div>
          <strong>Device:</strong>
          <t t-esc="state.lastMessage.dId" />
        </div>
        <div>
          <strong>Updated:</strong>
          <t t-esc="lastUpdateTime" />
        </div>
      </div>
    </Card>
  </t>
</templates>
